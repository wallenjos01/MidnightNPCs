// Loom documentation: https://fabricmc.net/wiki/documentation:fabric_loom
// fabric.mod.json documentation: https://fabricmc.net/wiki/documentation:fabric_mod_json

plugins {

    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '7.1.2'

}

repositories {

    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    mavenLocal()
}

configurations {
    shade
}

shadowJar {

    archiveClassifier.set('')
    configurations = [project.configurations.shade]
}
tasks.assemble.dependsOn tasks.shadowJar

dependencies {

    minecraft "com.mojang:minecraft:${project.fabric_minecraft_version}"
    mappings loom.officialMojangMappings()

    modApi "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
    modApi 'org.wallentines:midnightlib:1.0-SNAPSHOT'

    modApi 'org.wallentines.midnightcore:api:1.0-SNAPSHOT'
    modApi 'org.wallentines.midnightcore:common:1.0-SNAPSHOT'
    modApi 'org.wallentines.midnightcore:fabric:1.0-SNAPSHOT'

    //modApi 'org.wallentines.skinsetter:api:3.1-SNAPSHOT'
    //modApi 'org.wallentines.skinsetter:common:3.1-SNAPSHOT'
    //modApi 'org.wallentines.skinsetter:fabric:3.1-SNAPSHOT'

    implementation project(':api')
    implementation project(':common')

    include(modImplementation(fabricApi.module('fabric-api-base', "${project.fabric_api_version}")))
    include(modImplementation(fabricApi.module('fabric-registry-sync-v0', "${project.fabric_api_version}")))
    include(modImplementation(fabricApi.module('fabric-object-builder-api-v1', "${project.fabric_api_version}")))

    shade project(':api')
    shade project(':common')


}

loom {
    runs {
        client {
            runDir = "run/client"
            ideConfigGenerated = false
            client()
        }
        server {
            runDir = "run/server"
            ideConfigGenerated = false
            server()
        }
    }
    interfaceInjection {
        enableDependencyInterfaceInjection = true
    }
}

processResources {

    Map<String, ?> ex = new HashMap<>()
    ex.put("version", project.version)
    ex.put("id", project.mod_id)
    ex.put("name", project.mod_name)
    ex.put("target", project.name)
    ex.put("description", project.description)
    ex.put("group", project.group)
    ex.put("minecraftVersion", project.fabric_minecraft_version)
    ex.put("fabricLoader", project.fabric_loader_version)
    ex.put("mainClass", project.main_class_name)

    filesMatching("fabric.mod.json") {
        expand(ex)
    }
    filesMatching("${project.mod_id}.mixins.json") {
        expand(ex)
    }
}

shadowJar {
    configurations = [project.configurations.shade]
    classifier "dev"
}

remapJar {
    dependsOn(shadowJar)
    inputFile.set(shadowJar.archiveFile)
}